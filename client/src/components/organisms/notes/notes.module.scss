@use "../../../../src/styles/mixins" as mixin;
.container {
  color: #ffffff;
  max-height: 100vh;
  padding: 2rem;
  box-sizing: border-box;
  width: 100%;
  max-width: 100%;
  // background-color: red;
  &__meta {
    @include mixin.flex(row, space-between, center);
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: #aaaaaa;
    border-bottom: 1px solid var(--color-foreground-secondary);
    h6 {
      box-sizing: content-box;
      display: flex;
      gap: 2rem;
    }
    label {
      width: 70%;
      @include mixin.flex(row, flex-start, center);
      gap: 2rem;
      color: var(--color-foreground-primary);
      cursor: pointer;
    }
  }
}

.header {
  @include mixin.flex(row, space-between, center);

  border-bottom: 1px solid var(--color-foreground-secondary);
}
.menuPaper {
  background-color: #1e1e1e !important; // dark background
  color: #ffffff !important; // white text
  border-radius: 8px;
  padding: 0.25rem 0;

  .MuiMenuItem-root {
    color: #ffffff;

    &:hover {
      background-color: #333333;
    }

    .MuiListItemIcon-root {
      color: #ffffff;
      min-width: 32px;
    }

    .MuiListItemText-root {
      color: #ffffff;
    }
  }
}

.editorWrapper {
  @include mixin.flex(column, space-between, flex-start);
  width: 100%;
  height: 70vh;

  box-sizing: border-box;
  flex-grow: 1;
  @media screen and (max-width: 768px) {
    height: 90vh;
  }

  .editor {
    font-size: (--font-size-h2);
    height: 100%;
    width: 100%;
    overflow-y: scroll;
    scrollbar-width: none;
    -ms-overflow-style: none;

    // Remove all focus outlines
    &:focus,
    &:focus-visible {
      outline: none !important;
      box-shadow: none !important;
    }

    .ProseMirror {
      height: 100%;
      padding: 1rem;
      cursor: text;
      h2 {
        font-size: var(--font-size-h2);
        font-weight: 600;
        margin: 1rem 0;
        color: var(--color-heading);
      }

      ul,
      ol {
        padding-left: 24px;
      }

      p {
        margin-bottom: 10px;
      }

      p.is-empty::before {
        content: attr(data-placeholder);
        color: #aaa;
        float: left;
        height: 0;
        pointer-events: none;
      }
    }
  }
}
